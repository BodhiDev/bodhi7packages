interface @beta Efl.Net.Socket extends Efl.Io.Reader, Efl.Io.Writer, Efl.Io.Closer {
    [[The basic socket interface.

      This is built upon the three core Input/Output interfaces:
        - @Efl.Io.Reader: to receive data.
        - @Efl.Io.Writer: to send data.
        - @Efl.Io.Closer: to close the socket for further operations.

      As such it can be used with utilities like @Efl.Io.Copier.
    ]]
    methods {
        @property address_local {
            [[The local address, similar to getsockname().

              The actual value depends on the type of socket, such as an
              IPv4 (ip:port) or IPv6 ([ip]:port) formatted for a
              TCP/UDP socket, the path if an Unix Local...

              It's always resolved. If operations are working
              with domain names or URLs, these are the values the kernel
              reports. It's similar to getsockname() in behavior.
            ]]
            get { }
            set @protected { }
            values {
                address: string; [[Local address]]
            }
        }

        @property address_remote {
            [[The remote address, similar to getpeername().

              The actual value depends on the type of socket, like an
              IPv4 (ip:port) or IPv6 ([ip]:port) formatted for a
              TCP/UDP socket, the path if an Unix Local...

              It's always resolved. If operations are working
              with domain names or URLs, these are the values the kernel
              reports. It's similar to getpeername() in behavior.
            ]]
            get { }
            set @protected { }
            values {
                address: string; [[Remote address]]
            }
        }
    }
}
