import eina_types;

interface @beta Efl.Gfx.Fill {
   [[Efl graphics fill interface]]
   methods {
      @property fill_auto {
         [[Binds the object's @.fill property to its actual geometry.

           If $true, then every time the object is resized, it will
           automatically trigger a call to @Efl.Gfx.Fill.fill.set
           with the new size (and 0, 0 as source image's origin),
           so the image will cover the whole object's area.

           This property takes precedence over @.fill. If set to $false, then
           @.fill should be set.

           This flag is $true by default (used to be $false with the old APIs,
           and was known as "filled").
         ]]
         set {}
         get {}
         values {
            filled: bool; [[$true to make the fill property follow
                            object size or $false otherwise.]]
         }
      }
      @property fill {
         [[Specifies how to tile an image to fill its rectangle geometry.

           Note that if $w or $h are smaller than the dimensions of the object,
           the displayed image will be tiled around the object's area. To have
           only one copy of the bound image drawn, $x and $y must be 0 and
           $w and $h need to be the exact width and height of the image object
           itself, respectively.

           Setting this property will reset the @.fill_auto to $false.
         ]]
         set {}
         get {}
         values {
            fill: Eina.Rect; [[The top-left corner to start drawing from
               as well as the size at which the bound image will be displayed.]]
         }
      }
   }
}
