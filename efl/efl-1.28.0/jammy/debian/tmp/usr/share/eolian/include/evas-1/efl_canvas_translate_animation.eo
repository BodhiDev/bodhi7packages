import eina_types;

class Efl.Canvas.Translate_Animation extends Efl.Canvas.Animation
{
   [[Animated translation effect.

     The @Efl.Canvas.Object will move from one point to another.
     Coordinates for the origin and destination points can be relative to the object
     or absolute (relative to the containing canvas).

     Note: Changing an object's position using @Efl.Gfx.Entity.position while this
     animation is running might lead to unexpected results.

     @since 1.24
   ]]
   c_prefix: efl_animation_translate;
   data: Efl_Canvas_Translate_Animation_Data;
   methods {
      @property translate {
         [[Translation vector, relative to the starting position of the object.
           So, for example, if $from is $[(0,0)], the object will move from its
           current position to $to.
         ]]
         set {
         }
         get {
         }
         values {
            from : Eina.Position2D; [[Relative initial position.]]
            to : Eina.Position2D; [[Relative ending position.]]
         }
      }
      @property translate_absolute {
         [[Translation vector, relative to the canvas.
           So, for example, if $from is $[(0,0)], the object will always start from the
           origin of the canvas, regardless of the current object position.
         ]]
         set {
         }
         get {
         }
         values {
            from : Eina.Position2D; [[Absolute initial position.]]
            to : Eina.Position2D; [[Absolute ending position.]]
         }
      }
   }
   implements {
      Efl.Object.constructor;
      Efl.Canvas.Animation.animation_apply;
   }
}
