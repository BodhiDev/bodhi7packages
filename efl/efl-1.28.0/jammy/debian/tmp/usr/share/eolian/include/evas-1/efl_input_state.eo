import efl_input_types;

interface Efl.Input.State
{
   [[Efl input state interface.

     @since 1.22
   ]]
   c_prefix: efl_input;
   methods {
      /* FIXME Efl.Input.Device is not stable yet*/
      @property modifier_enabled @beta {
         [[Indicates whether a key modifier is on, such as Ctrl, Shift, ...]]
         get {}
         keys {
            mod: Efl.Input.Modifier; [[The modifier key to test.]]
            seat: const(Efl.Input.Device) @optional; [[The seat device, may be $null]]
         }
         values {
            is_set: bool; [[$true if the key modifier is pressed.]]
         }
      }
      /* FIXME Efl.Input.Device is not stable yet*/
      @property lock_enabled @beta {
         [[Indicates whether a key lock is on, such as NumLock, CapsLock, ...]]
         get {}
         keys {
            lock: Efl.Input.Lock; [[The lock key to test.]]
            seat: const(Efl.Input.Device) @optional; [[The seat device, may be $null]]
         }
         values {
            is_set: bool; [[$true if the key lock is on.]]
         }
      }
   }
}
